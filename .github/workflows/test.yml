name: Run Tests

on:
  pull_request:
    branches:
      - dev
      - main

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server

      - name: Start MySQL service
        run: sudo service mysql start

      - name: Configure MySQL root access
        run: |
          echo "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';" > init.sql
          sudo mysqld --init-file=init.sql &
          sleep 10

      - name: Stop existing services
        run: |
          sudo lsof -t -i:3306 | xargs kill -9 || true

      - name: Create test database
        run: mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS ratings_test_db;"

      - name: Set up environment variables for testing
        working-directory: ./application/server
        run: |
          echo "NODE_ENV=development" > .env
          echo "DEV_HOST=127.0.0.1" >> .env
          echo "DEV_USER_STRING=root" >> .env
          echo "DEV_PASSWORD=root" >> .env
          echo "DEV_DATABASE=ratings_test_db" >> .env
          echo "PORT=8000" >> .env
          echo "JWT_SECRET=abc123" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "RAWG_API_KEY=${{ secrets.RAWG_API_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          cat .env

      - name: Fix permissions for index file
        working-directory: ./application/server
        run: chmod +x src/index.ts

      - name: Install dependencies
        working-directory: ./application/server
        run: npm install --force

      - name: Start server
        working-directory: ./application/server
        run: |
          nohup npm run dev & # Start server in the background
          sleep 5

      - name: Initialize test database
        working-directory: ./application/server/scripts
        run: |
          chmod +x sqlDevConnect.sh # Ensure script is executable
          ./sqlDevConnect.sh # Run the initialization script

      - name: Run tests
        working-directory: ./application/server
        env:
          NODE_ENV: development
        run: npm test