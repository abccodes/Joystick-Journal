{"ast":null,"code":"var _jsxFileName = \"/Users/fujiayin/Documents/GitHub/csc648-01-fa24-team02/application/web/src/components/theme-provider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  theme: \"system\",\n  setTheme: () => null\n};\nconst ThemeProviderContext = /*#__PURE__*/createContext(initialState);\nexport function ThemeProvider(_ref) {\n  _s();\n  let {\n    children,\n    defaultTheme = \"system\",\n    storageKey = \"react-ui-theme\",\n    ...props\n  } = _ref;\n  const [theme, setTheme] = useState(() => localStorage.getItem(storageKey) || defaultTheme);\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove(\"light\", \"dark\");\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n      root.classList.add(systemTheme);\n      return;\n    }\n    root.classList.add(theme);\n  }, [theme]);\n  const value = {\n    theme,\n    setTheme: theme => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProviderContext.Provider, {\n    ...props,\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"YkY4D08WntVjXLroWjAGi4sfNRs=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeProviderContext);\n  if (context === undefined) throw new Error(\"useTheme must be used within a ThemeProvider\");\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","initialState","theme","setTheme","ThemeProviderContext","ThemeProvider","_ref","_s","children","defaultTheme","storageKey","props","localStorage","getItem","root","window","document","documentElement","classList","remove","systemTheme","matchMedia","matches","add","value","setItem","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/fujiayin/Documents/GitHub/csc648-01-fa24-team02/application/web/src/components/theme-provider.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\" | \"system\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"react-ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove(\"light\", \"dark\");\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\";\n\n      root.classList.add(systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAevE,MAAMC,YAAgC,GAAG;EACvCC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAEA,CAAA,KAAM;AAClB,CAAC;AAED,MAAMC,oBAAoB,gBAAGT,aAAa,CAAqBM,YAAY,CAAC;AAE5E,OAAO,SAASI,aAAaA,CAAAC,IAAA,EAKN;EAAAC,EAAA;EAAA,IALO;IAC5BC,QAAQ;IACRC,YAAY,GAAG,QAAQ;IACvBC,UAAU,GAAG,gBAAgB;IAC7B,GAAGC;EACe,CAAC,GAAAL,IAAA;EACnB,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAChC,MAAOc,YAAY,CAACC,OAAO,CAACH,UAAU,CAAC,IAAcD,YACvD,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMiB,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,eAAe;IAE5CH,IAAI,CAACI,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IAEtC,IAAIjB,KAAK,KAAK,QAAQ,EAAE;MACtB,MAAMkB,WAAW,GAAGL,MAAM,CAACM,UAAU,CAAC,8BAA8B,CAAC,CAClEC,OAAO,GACN,MAAM,GACN,OAAO;MAEXR,IAAI,CAACI,SAAS,CAACK,GAAG,CAACH,WAAW,CAAC;MAC/B;IACF;IAEAN,IAAI,CAACI,SAAS,CAACK,GAAG,CAACrB,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMsB,KAAK,GAAG;IACZtB,KAAK;IACLC,QAAQ,EAAGD,KAAY,IAAK;MAC1BU,YAAY,CAACa,OAAO,CAACf,UAAU,EAAER,KAAK,CAAC;MACvCC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,oBACEF,OAAA,CAACI,oBAAoB,CAACsB,QAAQ;IAAA,GAAKf,KAAK;IAAEa,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EACpDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACoB,CAAC;AAEpC;AAACvB,EAAA,CAzCeF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA2C7B,OAAO,MAAM2B,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGtC,UAAU,CAACQ,oBAAoB,CAAC;EAEhD,IAAI8B,OAAO,KAAKC,SAAS,EACvB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EAEjE,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CAPWD,QAAQ;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}